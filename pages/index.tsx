import { ConnectButton } from '@rainbow-me/rainbowkit';
import type { NextPage } from 'next';
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import { useAccount, useBalance, useConnect, useNetwork } from 'wagmi';
import { useEffect, useState } from 'react';

const Home: NextPage = () => {

 const {address, connector:activeConnector,isConnected}=useAccount();

 const {error}=useConnect();

 const {chain,chains}=useNetwork();

 const {data}=useBalance({
  address,
 });

 const [hasMounted, setHasMounted] = useState(false);
 useEffect(() => {
   setHasMounted(true);
 }, []);
 if(!hasMounted){
  return null;
 }

  return (
    <div className={styles.container}>
      <Head>
        <title>RainbowKit App</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <main className={styles.main}>
        <div className='container'>
        <ConnectButton />
        {isConnected?(
          <h2 className='activeConnector'>
            You are connected to <span>{activeConnector?.name}</span>{' '}
          </h2>
        ):(
          <h2>Not Connected</h2>
        )}
        </div>

        <section className='Balance'>
          <h3>
            Balance: {" "}
            <span>
              {Number(data?.formatted).toFixed(3)}{data?.symbol}
            </span>

          </h3>{" "}
        </section>

        {chains && 
        <div className='Current_chain'>
          Current chain:
          {isConnected?(
            <span>{chains.map((chain)=>chain.name)}</span>
          ):("Connect Wallet")}</div>}
        
      </main>

      <p className="error">{error && <span>{error.message}</span>}</p>
      {/* End of component */}
    </div>
  );
};

export default Home;
